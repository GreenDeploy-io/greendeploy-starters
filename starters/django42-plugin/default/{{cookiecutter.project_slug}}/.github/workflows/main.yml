name: Django Plugin Pytest Matrix CI/CD

on:
  push:
    branches:
      - main  # replace with your default branch name if different
  pull_request:
    branches:
      - main  # replace with your default branch name if different

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        # python-version: ['3.8', '3.9', '3.10', '3.11']
        # django-version: ['3.2', '4.1', '4.2']
        # postgres-version: ['14', '15']
        python-version: ['3.10', '3.11', '3.12']  # Quoted version numbers
        django-version: ['4.2']
      fail-fast: false

    steps:
    - name: Check out repository code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # Cache other dependencies from requirements.txt
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    # Cache matrix dependencies
    - name: Cache matrix dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-matrix-${{ matrix.django-version }}
        restore-keys: |
          ${{ runner.os }}-pip-matrix-

    # Install matrix dependencies
    - name: Install Django
      run: pip install django==${{ matrix.django-version }}

    # Install other dependencies
    - name: Install dependencies
      run: pip install -r requirements.txt

    # Install the local package (not cached)
    - name: Install local package
      run: pip install -e .

    - name: Run Django tests
      run: pytest --cov -c pytest.ini # replace with your test command

    - name: List directory contents
      run: ls -al

    - name: Rename coverage data
      run: |
        mv .coverage .coverage_${{ matrix.python-version }}_${{ matrix.django-version }}

    - name: Upload coverage data
      uses: actions/upload-artifact@v3
      with:
        name: coverage-data
        path: .coverage_${{ matrix.python-version }}_${{ matrix.django-version }}

  coverage:
    name: Coverage
    runs-on: ubuntu-22.04
    needs: build  # depends on the 'build' job

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: python -m pip install --upgrade coverage[toml] pytest-cov

      - name: Download data
        uses: actions/download-artifact@v3
        # with:
        #   name: coverage-data

      - name: List directory contents after download
        run: ls -al

      - name: List directory contents after download
        run: |
          cd coverage-data
          ls -al

      - name: Debug coverage data before combining
        run: python -m coverage debug data

      - name: Debug - Check if .coverage exists
        run: test -f .coverage && echo ".coverage exists" || echo ".coverage does NOT exist"

      # - name: Debug - Show .coverage contents
      #   run: cat .coverage
      - name: Check number of coverage files
        id: check-num-files
        run: |
          cd coverage-data
          num_files=$(ls .coverage_* | wc -l)
      # previously: python -m coverage combine ./.coverage  # specify the file
      - name: Combine coverage data
        run: |
          cd coverage-data
          python -m coverage combine .coverage_*

      - name: Generate HTML report
        run: |
          cd coverage-data
          ls -alh
          python -m coverage html --skip-covered --skip-empty || echo "Coverage command failed"
          python -m coverage report

      # Comment for debugging. Uncomment to fail if coverage is below 100%.
      # - name: Fail if coverage is below 100%
      #   run: python -m coverage report --fail-under=100

      # Do not need this as we arent combining coverage data.
      # - name: Debug coverage data after combining
      #   run: python -m coverage debug data

      - name: Upload HTML report
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: html-report
          path: htmlcov
