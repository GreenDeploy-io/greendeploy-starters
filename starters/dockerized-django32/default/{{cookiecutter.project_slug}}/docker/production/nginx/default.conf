## for redirect all http to https
server {
    listen 80;
    listen [::]:80;
    server_name *.{{cookiecutter.domain_name}} {{cookiecutter.domain_name}};
    # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
    return 301 https://$host$request_uri;
}

## for https version of {{cookiecutter.domain_name}}
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name *.{{cookiecutter.domain_name}} {{cookiecutter.domain_name}};

#    location /websocket/ {
#        proxy_pass   http://websocket:8001;

#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection "upgrade";

#        proxy_redirect off;
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Host $server_name;
#    }

    ## this is to proxy pass to the {{cookiecutter.docker_service_web}} container
    location / {
      proxy_pass http://{{cookiecutter.docker_service_web}}:5000;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_redirect off;
    }

 #   location /websockets/ {
 #       try_files $uri @proxy_websocket;
 #   }

 #   location @proxy_websocket {
 #       proxy_set_header Upgrade $http_upgrade;
 #       proxy_set_header Connection "upgrade";
 #       proxy_redirect off;
 #       proxy_pass   http://websocket:8001;
 #   }

    ## this is to alias the /static to the /staticfiles folder inside {{cookiecutter.docker_service_web}} container
    location /static/ {
        alias /{{cookiecutter.docker_service_web}}/staticfiles/;
    }
    ## this is to alias the /media to the /media folder inside {{cookiecutter.docker_service_web}} container
    location /media/ {
        alias /{{cookiecutter.docker_service_web}}/media/;
    }

    ## this is for the various SSL settings
    include /etc/nginx/conf.d/ssl.conf;
}

## this is to block attempts by those using invalid host headers
server {
    server_name _;
    listen       80 default_server;
    # we do not need to cater for ssl 443 for invalid host headers
    return       444;
}
